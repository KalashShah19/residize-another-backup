@{
    Layout = "";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="author" content="Untree.co" />
    <link rel="shortcut icon" href="favicon.png" />

    <meta name="description" content="" />
    <meta name="keywords" content="bootstrap, bootstrap5" />

    @* <link rel="preconnect" href="https://fonts.googleapis.com" /> *@
    @* <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin /> *@
    @* <link href="https://fonts.googleapis.com/css2?family=Work+Sans:wght@400;500;600;700&display=swap"
        rel="stylesheet" /> *@

    @* <link rel="stylesheet" href="fonts/icomoon/style.css" /> *@
    @* <link rel="stylesheet" href="fonts/flaticon/font/flaticon.css" /> *@
    <link rel="stylesheet" href="css/tiny-slider.css" />
    <link rel="stylesheet" href="css/aos.css" />
    <link rel="stylesheet" href="css/style.css" />

    <link href="../../App_Themes/Default/css/kendo.common.min.css" rel="stylesheet" />
    <link href="../../App_Themes/Default/css/kendo.default.min.css" rel="stylesheet" />
    <link href="../../App_Themes/Default/css/fonts.css" rel="stylesheet" />
    <link href="../../App_Themes/Default/css/styleguide.css" rel="stylesheet" />
    <link href="../../App_Themes/Default/css/dashboard.css" rel="stylesheet" />
    <link href="../../App_Themes/Default/css/core-pocket-responsive.css" rel="stylesheet" />
    <link href="../../App_Themes/Default/css/casepoint.comfortable.css" rel="stylesheet" />
    <link href="../../App_Themes/Default/css/kendo.Deeppurple.css" rel="stylesheet" />

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
 @* <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script> *@
<!-- jQuery Library -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- jQuery Validation Plugin -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>

    <!-- css -->
    <link href="../../App_Themes/Default/css/core-pocket.css" rel="stylesheet" />
            <!-- SweetAlert2 CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
<link href="~/css/Loader.css" rel="stylesheet" type="text/css" />


    <style>
        ::-webkit-scrollbar {
            width: 0px;
            background: transparent;
            }


            ::-moz-scrollbar {
            width: 0; 
            background: transparent;
            }


            ::-ms-scrollbar {
            width: 0; 
            background: transparent;
            }

        #dvLeftMenu {
            margin-left: 98px !important;
        }

        h1 {
            font-size: 24px;
            color: #333;
            margin-bottom: 10px;
        }

        p {
            font-size: 18px;
            color: #666;
            margin-bottom: 20px;
        }

        .options {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;

        }
        .Amenities {
            @* display: flex; *@
            gap: 150px;
            margin-bottom: 10px;
        }

        .option {
            border: 1px solid #ddd;
            border-radius: 5px;
            width: fit-content;
            cursor: pointer;
            background-color: #fff;
            color: #007777;
            padding: 3px 20px !important;
           margin: 0% !important;
        }

        .option:hover,
        .option.selected {
            background-color: #007777;
            color: #fff;
        }

        .property-type {
            margin: 20px 0;
        }

        .radio-group,.checkbox-group {
            display: flex;
            align-items: center;
            gap: 20px;
        }


        .radio-group input[type="radio"] , .checkbox-group input[type="checkbox"]{
            display: none;
        }

        .radio-group label ,.checkbox-group label  {
            position: relative;
            padding-left: 30px;
            cursor: pointer;
            color: #555;
            font-size: 16px;

        }

        .radio-group label:before {
            content: "";
            position: absolute;
            top: 0px;
            left: 0;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            border: 2px solid #007777;
            background-color: #fff;
        }
        .checkbox-group label:before {
            content: "";
            position: absolute;
            top: 0px;
            left: 0;
            width: 20px;
            height: 20px;
            border-radius: 30%;
            border: 2px solid #007777;
            background-color: #fff;
        }

        .radio-group input[type="radio"]:checked+label:after {
            content: "";
            position: absolute;
            top: 6px;
            left: 6px;
            width: 8px;
            height: 8px;
            background-color: #007777;
            border-radius: 50%;
        }
        .checkbox-group input[type="checkbox"]:checked+label:after {
            content: "";
            position: absolute;
            top: 6px;
            left: 6px;
            width: 8px;
            height: 8px;
            background-color: #007777;
            border-radius: 50%;
        }

        .property-options {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 10px;
        }

        .property-option {
            border: 1px solid #ddd;
            border-radius: 25px;
            padding: 8px 15px;
            cursor: pointer;
            background-color: #fff;
            color: #555;
            font-size: 14px;
            transition: all 0.3s;
        }
        .furnishing-option {
            border: 1px solid #ddd;
            border-radius: 25px;
            padding: 8px 15px;
            cursor: pointer;
            background-color: #fff;
            color: #555;
            font-size: 14px;
            transition: all 0.3s;
        }
        .stauts-option,.age-option{
            border: 1px solid #ddd;
            border-radius: 25px;
            padding: 8px 15px;
            cursor: pointer;
            background-color: #fff;
            color: #555;
            font-size: 14px;
            transition: all 0.3s;
        }
       

        .property-option:hover,
        .property-option.selected {
            background-color: #007777;
            color: #fff;
        }
        .furnishing-option:hover,
        .furnishing-option.selected {
            background-color: #007777;
            color: #fff;
        }
        .stauts-option:hover,
        .stauts-option.selected {
            background-color: #007777;
            color: #fff;
        }
        .age-option:hover,
        .age-option.selected {
            background-color: #007777;
            color: #fff;
        }
        .bathOption:hover,
        .bathOption.selected {
            background-color: #007777;
            color: #fff;
        }

        .btn-continue {
            width: 100%;
            background-color: #007777;
            color: #fff;
            padding: 10px 20px;
            font-size: 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .btn-continue:hover {
            background-color: #007777;
        }

         .container {
            display: flex;
            margin: 20px auto;           
             height: 800px;
            background-color: #fff;
            border-radius: 8px;           
            box-shadow: 0 2px 10px #d6e6e6;
            overflow: hidden;
            overflow-y: auto
        }

        /* Sidebar */
        .sidebar {
            flex: 0 0 25%;
             overflow-y: auto;
            background-color: #f4f6f8;
            padding: 20px;
            display: flex;
            flex-direction: column;
            gap: 20px;
            position: relative;
        }

        .step {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .step-number {
            width: 25px;
            height: 25px;
            border-radius: 50%;
            background-color: #ffffff;
            color: #333;
            text-align: center;
            line-height: 25px;
            font-weight: bold;
        }

        .step.active .step-number {
            background-color: #007777;
            color: #fff;
        }

        @* .step-line {
            width: 2px;
            height: 100%;
            background-color: #410055;
            position: absolute;
            top: 0;
            left: 50%;
            transform: translateX(-50%);
            opacity: 0.3;
            transition: opacity 0.3s ease-in-out;
        }

        .step-line.active {
            opacity: 1;
        } *@


        .step-label {
            font-size: 14px;
            color: #555;
        }

        .step.active .step-label {
            color: #007777;
        }

       .main-content {
        overflow-y: auto; 
            padding: 40px;
            height: 100%;
            @* width: 100%; *@
        }
       


        .form-section {
            display: none;
        }

        .form-section.active {
            display: block;
        }

        h2 {
            margin-bottom: 10px;
            color: #333;
        }

        p {
            margin-bottom: 20px;
            color: #666;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-size: 14px;
        }

        input,
        button {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            font-size: 14px;
            border-radius: 4px;
            border: 1px solid #ccc;
        }

        .navigation-buttons {
            width: fit-content;
            display: flex;
            gap: 20px;

        }


        .next-btn ,.submit {
            background-color: #005555;
            color: white;
            padding: 10px 35px;
            border-radius: 10px;
        }

        .next-btn:hover {
            background-color: #007777;
        }

        .back-btn {
            background-color: #005555;
            color: white;
             padding: 10px 50px;
             border-radius: 10px;
        }

        .back-btn:hover {
            background-color: #007777;
        }

        .title {
            text-align: center;
            margin-bottom: 20px;
        }

        .room-details {
            background-color: #fff;
            padding: 10px;
            border-radius: 10px;
        }

        .rowclass {
            @* display: flex; *@
            align-items: center;
            margin-bottom: 10px;          
            @* display: block !important;   *@
        }
        .Amenities button{
            padding: 10px !important;
            margin: 0px 20px 20px 0px !important;
            width: 200px !important;
            @* background-color: #009999; *@
        }
       

        .row label {
           
            font-weight: 500;
        }
.step-3{
    margin-top: 50px;
}

.roomadd{
    color: rgb(26, 25, 25);
    margin: 20px 0px;
    width: fit-content;
    border-bottom: 2px solid #007777;
}
.plot{
    border: 1px solid rgb(201, 199, 199) !important;
    width: fit-content;
    @* background-color: #007777; *@
    
}

.propertyfloor{
   height: 50px;
    border:1px solid rgb(201, 199, 199) ;
@* padding: 20px; *@
    margin-left: 40px ;
    margin-top: 5px;
    padding: 0px 140px 0px 15px;
}
.totalfloor input{
    
    border:1px solid rgb(201, 199, 199) ;
    border-radius: 0;
    width: 250px;
    height: 50px !important;
  
}
.loction{
    margin-bottom: 20px;
    width: 350px;
}

.city input{
    
    border:1px solid rgb(201, 199, 199) ;
    border-radius: 0;
    width: 350px;
    height: 50px !important;
   
  
}

.plot input{
    border: 0;
    border-right:1px solid rgb(201, 199, 199) ;
    border-radius: 0;
    height: 40px !important;
  
}
.form-floating>.form-control{
    height: 0;
}
.plot select{
    border: 0;
   margin: 0px 30px 0px 2px;
}
       .area-details {
    padding: 20px;
    border-radius: 10px;
}
input:not([role=listbox]):focus{
    box-shadow: none;
}
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}


.info-icon {
    cursor: pointer;
    margin-left: 5px;
}

input[type="number"] {
    -moz-appearance: textfield;
}


.upload-btn-video {
  width: 300px;  
  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
   border: 2px solid #ddd;
    border-radius: 8px;
    padding: 10px;
    background-color: #f9f9f9;
    transition: all 0.3s ease-in-out;
    text-align: center;
        height: fit-content;
}
.upload-btn {
  width: 300px;  
  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
   border: 2px solid #ddd;
    border-radius: 8px;
    padding: 10px;
    background-color: #f9f9f9;
    transition: all 0.3s ease-in-out;
    text-align: center;
}
.upload-container {
  width: 300px;  
  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
   border: 2px solid #ddd;
    border-radius: 8px;
    padding: 10px;
    background-color: #f9f9f9;
    transition: all 0.3s ease-in-out;
    text-align: center;
}
.upload-container:hover {
 box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
background-color: #e8f0fe;
}


.upload-area {
  text-align: center;
}

.upload-area img {
  width: 100vw;
  height: 180px;
}

.upload-area p {
  color: #999;
  font-size: 14px;
  margin: 10px 0;
}

.upload-area button {
  background-color: #009999;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
}
.video-preview{width: 200px;}
.videodiv{
    justify-items: center;
    margin-bottom: 20px;
}
.video-upload-container { 
  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
   border: 2px solid #ddd;
    border-radius: 8px;
    padding: 10px;
    background-color: #f9f9f9;
    transition: all 0.3s ease-in-out;
    text-align: center;
    width: 890px;
}
.video-upload-container:hover { 
     box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    background-color: #e8f0fe;
}
.pdf-upload-container {
    border: 2px solid #ddd;
    border-radius: 8px;
    padding: 10px;
    background-color: #f9f9f9;
    transition: all 0.3s ease-in-out;
    text-align: center;
    width: 860px;
}

.pdf-upload-container:hover {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    background-color: #e8f0fe;
}
.pdf-upload-area {
    position: relative;
    height: 300px;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #f0f0f0;
    border: 1px solid #bbb;
    border-radius: 6px;
}

.pdf-preview {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

.error-message {
    color: red;
    font-size: 12px;
   padding: 8px !important;
   border-radius: 5px;
    margin-top: 15px !important;
   display: contents; 
}
.areaArea .error-message {
        color:red !important;
    font-size: 12px;
    border-radius: 5px;
    position: absolute !important;
     top: 25px !important; 
    display: flex !important;
    background: none;
    border: 0;
}
.address{
    width: 600px !important;
}
.getcity{
    width: fit-content;
    background-color: white !important;
    margin-left: 10px;
    height: 50px;
}
   .range-container {
            display: flex;
            align-items: center;
            gap: 15px;
            margin: 20px;
        }

     
        input[type="range"] {
            -webkit-appearance: none;
            width: 300px;
            height: 10px;
            background: #ddd;
            border-radius: 2px;
            outline: none;
        }

      
        .value-box {
            cursor: pointer !important;
            margin-top: 10px;
            font-size: 1rem;
            font-weight: bold;
            background-color: #007777;
            color: white;
            padding: 5px 20px;
            border-radius: 5px;
            width: fit-content;
            text-align: center;
        }
         .welcome{
    justify-items: center
}
.delete-icon {
    position: absolute;
    top: 0px; 
    right: 6px; 
    background-color: rgba(255, 255, 255, 0.4) !important;
    backdrop-filter: blur(105px) !important; 
    border: none;
    border-radius: 50% !important;
    width: 35px;
    height: 35px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    font-size: 16px;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
}
.delete-icon:hover {
    background-color: rgba(255, 0, 0, 0.5) !important;
    color: white;
}

    </style>

    <title>Residize post project</title>
    <link rel="icon" href="/Images/whitelogo.png">

</head>

<body>
    <!-- Header (Existing Code) -->
    <header class="main-header">
        <nav class="mt-navbar">
            <div class="nav-left m-5" id="dvLeftMenu" data-role="aratooltipv2">
                <a href="/Client/Home">
                    <div class="logo-wrapper ms-5 ">
                        <img src="../../App_Themes/Default/images/residize-white.png" />
                    </div>
                </a>
            </div>
            @* <div class="nav-right">
                <ul class="user-menu">
                    <li class="support-mail-wrapper">
                        <a href="../AI/index" class="icon">Residize AI </a>
                    </li>
                </ul>
            </div> *@
        </nav>
    </header>

    <!-- Multi-Step Form -->
    <div>
        <div class="custom-loader" id="loader" style="display: none;" >
            <div class="logo-loader">
                <img src="/Images/logo.png" alt="Loading..." />
                <div class="rotating-dot"></div>
            </div>
        </div>

<form action="" id="myForm" enctype="multipart/form-data">
        <div class="container">
            <div class="sidebar">
                <div class="welcome mb-3">

                <h1>Welcome, @ViewBag.username</h1>
                </div>
                @* <div class="step active">
                    <div class="step-number">1</div>
                    <div class="step-label">Basic Details</div>
                </div> *@
                @* <div class="step-line"></div> *@
                <div class="step active">
                    <div class="step-number">1</div>
                    <div class="step-label">Location Details</div>
                </div>
                @* <div class="step-line"></div> *@
                <div class="step">
                    <div class="step-number">2</div>
                    <div class="step-label">Project Profile</div>
                </div>
                <div class="step">
                    <div class="step-number">3</div>
                    <div class="step-label">Photos, Videos & Voice-over</div>
                </div>
                <div class="step">
                    <div class="step-number">4</div>
                    <div class="step-label">Amenities Section</div>
                </div>

            </div>


            <div class="main-content">
                <!-- Step 1 -->
                @* <div class="form-section " id="step-1">
                    <div class="">
                        <h1>Welcome back { User Name },</h1>
                        <p>Fill out basic details</p>

                        <div>
                            <p>I'm looking to</p>
                            <div class="options">
                                <div class="option selected" onclick="selectOption(this)">Sell</div>
                                <div class="option" onclick="selectOption(this)">Rent </div>                              
                            </div>
                        </div>

                        <div class="property-type">
                            <p>What kind of property do you have?</p>
                            <div class="radio-group">
                                <input type="radio" id="residential" name="property">
                                <label for="residential"><span class="">Residential</span></label>
                                
                                <input type="radio" id="commercial" name="property" >
                                <label for="commercial">Commercial</label>
                            </div>

                            
                        </div>


                        <div class="navigation-buttons">

                            <button type="button" class="next-btn">Continue</button>
                        </div>
                    </div>
                </div> *@

                <!-- Step 2 -->
                <div class="form-section active" id="step-1">
                    <h2> Location Details</h2>
                    <p>Provide the location details of the project.</p>                    
                     <div class="">
                                    
                                    <div class="row">
                                       
                                         <div class="area-details">
                                             <div class="city ">
                                                 <div class="loction form-floating">
                                                    <input name="Property-name" type="text" class="form-control"  id="property-Name" placeholder=" Name" required>
                                                    <label for="property-Name">Project Name</label>
                                                </div>  
                                                <div class="d-flex">


                                                  <div class="loction form-floating">
                                                    <input name="Pincode" type="number" class="Pincode form-control" id="Pincode" placeholder="Pincode" required>
                                                    <label for="Pincode">Pincode</label>
                                                </div> 
                                                 <button type="button" class="getcity" id="showMoreFields" style="display: none;">Get City</button>
                                                </div>      

                                                 <div  id="hiddenFields" class="mt-3" style="display: none;">

                                                <div class="loction form-floating">
                                                    <input name="city" type="" class="form-control" id="city" placeholder="City">
                                                    <label for="city">City</label>
                                                </div>  
                                               <div class="loction form-floating">
                                                <select name="locality" class="form-select" id="locality" required>
                                                    <option value="" disabled selected>Select Locality</option>
                                                    <option value="Locality1">Locality 1</option>
                                                    <option value="Locality2">Locality 2</option>
                                                    <option value="Locality3">Locality 3</option>
                                                </select>
                                                <label for="locality">Locality</label>
                                            </div>

                                             
                                                @* <div class="loction form-floating">
                                                    <input name="locality" type="text" class="form-control" id="locality" placeholder="locality" required>
                                                    <label for="locality">Locality</label>
                                                </div>                                                *@
                                                    <label for="Address">Address</label>
                                                <div class="loction form-floating">
                                                   
                                                      <textarea id="Address" name="Address" class="Address p-2" rows="3"  cols="43"></textarea>
                                                 </div>
                                                </div>                                      
                                                                                            
                                            </div>                                       
                                    </div>
                                </div>
                                


                               </div>
                    <div class="navigation-buttons">
                        @* <button type="button" class="back-btn">Back</button> *@
                        <button type="button" class="next-btn">Continue</button>
                    </div>
                </div>
                <!-- Step 3 -->
                <div class="form-section"  id="step-2">
                    <div class="">
                        <h1 class="property">Tell us about your property</h1>
                        
                        <div>
                            <div class="step-3">        

@* Availability stauts *@
                                    <div class="">
                                                                    <h4 class="roomadd">Availability Status</h4>
                                                                    <div class="furnishing-options">
                                                                <button type="button" style="width: fit-content;" class="stauts-option" data-value="true"onclick="selectstauts(this)">Ready to move</button>
                                                                <button type="button" style="width: fit-content;" class="stauts-option " data-value="false" onclick="selectstauts(this)">Under construction</button>
                                                                    </div>
                                    </div>
                                    <div style="display: none;" class="age-options">
                                                                    <h4 class="roomadd">Age of property</h4>
                                                                    <div>

                                                                        @* <label for="customRange1" class="form-label">Example range</label> *@
                                                                        <input min="0" max="20" type="range" class="form-range" id="customRange1">
                                                                         <div class="value-box" id="rangeValue">20</div>
                                                                    </div>
                                                                    @* <div class="">
                                                                <button type="button" style="width: fit-content;" data-value="0-1 year" class="age-option" onclick="selectAge(this)">
                                                                    0-1 years</button>
                                                                <button type="button" style="width: fit-content;" data-value="1-5 year" class="age-option" onclick="selectAge(this)">
                                                                    1-5 years</button>
                                                                <button type="button" style="width: fit-content;" data-value="5-10 year" class="age-option" onclick="selectAge(this)">
                                                                    5-10 years</button>
                                                                <button type="button" style="width: fit-content;" data-value="10 +year" class="age-option" onclick="selectAge(this)">
                                                                    10+ years</button>
                                                                
                                                                    </div> *@
                                    </div>
@* Price Details *@
                                    @*<div class="">
                                        
                                        <div class="row">
                                                                    
                                          <div class="area-details">
                                              <div class="checkbox-group mt-3">                                                                              
                                                    <input type="checkbox" id="Tax" name="Tax" >
                                                    <label for="Tax">Tax and Govt charges included</label>                           
                                              </div>
                                                            
                                          </div>
                                        </div>
                                    </div> *@

                               </div>
                        </div>

                        

                        <div class="navigation-buttons ">
                            <button type="button"class="back-btn">Back</button>
                            <button type="button" class="next-btn">Continue</button>
                        </div>
                    </div>
                </div>
                <!-- Step 4 -->
                <div class="form-section " id="step-3">
                    <div class="">
                        <h4>Add photos of your property</span></h4>
                        <span class="h6" style="color: #7C7C7C;">A picture is worth a thousand words. 87% of buyers look at photos before buying</span><br>
                        <h5 class="h5 mt-5" style="color: #212529;font-size: 20px;">Upload from desktop</h5>
                        <div class="gap-5  mt-4 row rowclass ms-1">
    
                            <div class="upload-container col col-sm-12 col-lg-3" style="display: none;">
                                <div class="upload-area position-relative" >
                                    <img src="" alt="Add Photos" class="uploaded-image">
                                     <button class="delete-icon" title="Delete">
                                             <i class="fas fa-trash-alt"></i>
                                        </button>
                                </div>
                            </div>
                        
                            <div class="upload-container col col-sm-12 col-lg-3" style="display: none;">
                                <div class="upload-area position-relative" >
                                    <img src="" alt="Add Photos" class="uploaded-image">
                                    <button class="delete-icon" title="Delete">
                                             <i class="fas fa-trash-alt"></i>
                                        </button>
                                </div>
                            </div>
                            
                            <div class="upload-container col col-sm-12 col-lg-3" style="display: none;">
                                <div class="upload-area position-relative">
                                    <img src="" alt="Add Photos" class="uploaded-image">
                                    <button class="delete-icon" title="Delete">
                                             <i class="fas fa-trash-alt"></i>
                                        </button>
                                </div>
                            </div>
                        
                            <div class="upload-container col col-sm-12 col-lg-3" style="display: none;">
                                <div class="upload-area position-relative">
                                    <img src="" alt="Add Photos" class="uploaded-image">
                                    <button class="delete-icon" title="Delete">
                                             <i class="fas fa-trash-alt"></i>
                                        </button>
                                </div>
                            </div>
                            <div class="upload-container col col-sm-12 col-lg-3" style="display: none;">
                                <div class="upload-area position-relative">
                                    <img src="" alt="Add Photos" class="uploaded-image">
                                    <button class="delete-icon" title="Delete">
                                             <i class="fas fa-trash-alt"></i>
                                        </button>
                                </div>
                            </div>
                         <div class="upload-btn col col-sm-12 col-lg-3">
                            <div class="upload-area">
                            <p>Add atleast 1 picture (max 5)</p>
                            <p>size 15 MB • Formats: png, jpg, jpeg</p>
                            <button type="button" onclick="uploadimage(this)" class="upload">Upload Photos</button>
                             <input type="file" accept="image/jpeg, image/png, image/jpg" multiple hidden id="fileInput">
                            </div>
   
                        </div>
                       
                        </div>


                        <span style="color: #7C7C7C;"> ------------------------------------------------------- Video Upload ------------------------------------------------------- </span>

                            @* video *@
                        <div class="gap-5 videodiv mt-4 ms-1">
                        <div class="video-upload-container col col-sm-6 col-lg-6" style="display: none;" >
                            <div class="video-upload-area position-relative">
                                <video controls class="video-preview" width="100%" height="auto">
                                    <source src="" type="video/mp4">
                                    Your browser does not support the video tag.
                                </video>
                                <button class="delete-icon" title="Delete">
                                             <i class="fas fa-trash-alt"></i>
                                        </button>
                            </div>
                        </div>
                      


                          
                        </div>
                         <div class="upload-btn-video col col-sm-12 col-lg-3">
                            <div class="upload-area">
                            <p>Add atleast 1 Video</p>
                            <p>size 100 MB • Formats: MP4</p>
                            <input type="file" accept="video/*" hidden id="videoFileInput">
                            <button type="button" onclick="uploadvideo(this)" class="upload-videos mt-3">Upload Videos</button>
                           
                            </div>
   
                        </div>
                        
                        <span style="color: #7C7C7C;"> ------------------------------------------------------- Brochure Upload ------------------------------------------------------- </span>
                        
                        @* pdf *@

                         <div class="videodiv gap-5 mt-4">
                           
                             <div class="pdf-upload-container col col-sm-12 col-lg-3" style="display: none;">
                                <div class="pdf-upload-area position-relative">
                                    <embed class="pdf-preview" type="application/pdf" width="100%" height="300px" src="">
                                 <button class="delete-icon" title="Delete">
                                             <i class="fas fa-trash-alt"></i>
                                        </button>
                                </div>
                            </div>
                          
                        </div>

                        
                         <div class="upload-btn col col-sm-12 col-lg-3">
                            <div class="upload-area">
                            <p>Add 1 Brochure file only</p>
                            <p>size 10 MB • Formats: PDF</p>                           
                                <input type="file" accept=".pdf" hidden id="pdfFileInput">                 
                                <button  type="button" onclick="uploadpdf(this)" class="upload-pdfs mt-3">Upload Brochure</button>
                           
                            </div>
   
                        </div>



                        <div class="navigation-buttons my-5">
                            <button type="button" class="back-btn">Back</button>
                            <button type="button" class="next-btn">Continue</button>
                        </div>
                    </div>
                </div>
                <!-- Step 5 -->
                <div class="form-section " id="step-4">
                    <div class="">
                       <h4 class="mb-3">Add amenities/unique features</h4>
                        <span class="h6" style="color: #7C7C7C;">These fields are used to populate USP & captions</span><br>
                        <span class="h6" style="color: #7C7C7C;">All fields on this page are optional</span><br>

                                    <div class=" mt-5">
                                         <span class="h6" style="color: #302e2e; margin-bottom: 30px;">Amenities :</span>
                                      
                                        <div class="Amenities mt-3 rowclass">
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="1"class="option amemitiesOption"> <i class="fas fa-swimming-pool"></i> Swimming Pool</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="2"class="option amemitiesOption"><i class="fas fa-dumbbell"></i> Gym</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="3"class="option amemitiesOption"> <i class="fas fa-parking"></i> Parking</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="4" class="option amemitiesOption"><i class="fas fa-child"></i> Playground</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="5"class="option amemitiesOption"><i class="fas fa-building"></i> Clubhouse</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="6"class="option amemitiesOption"> <i class="fas fa-tree"></i> Garden</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="7"class="option amemitiesOption"> <i class="fas fa-shield-alt"></i> Security</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="8"class="option amemitiesOption"> <i class="fas fa-video"></i> CCTV</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="9"class="option amemitiesOption"><i class="fas fa-battery-full"></i> Power Backup</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="10"class="option amemitiesOption"> <i class="fas fa-sort"></i> Lift</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="11"class="option amemitiesOption"><i class="fas fa-wifi"></i> Wi-Fi</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="12"class="option amemitiesOption"><i class="fas fa-fire-extinguisher"></i> Fire Safety</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="13"class="option amemitiesOption"><i class="fas fa-users"></i> Conference Room</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="14"class="option amemitiesOption"><i class="fas fa-book"></i> Library</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="15"class="option amemitiesOption"><i class="fas fa-futbol"></i> Sports Area</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="16"class="option amemitiesOption"> <i class="fas fa-dove"></i> Yoga Room</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="17"class="option amemitiesOption"> <i class="fas fa-child"></i>  Kids Zone</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="18"class="option amemitiesOption"><i class="fas fa-hot-tub"></i> Jacuzzi</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="19"class="option amemitiesOption"><i class="fas fa-spa"></i> Spa</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="22"class="option amemitiesOption"> <i class="fas fa-film"></i> Theater</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="23"class="option amemitiesOption"><i class="fas fa-table-tennis"></i> Tennis Court</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="24"class="option amemitiesOption"><i class="fas fa-basketball-ball"></i> Basketball Court</button>
                                            <button type="button" onclick="selectamemitiesOption(this)" data-value="25"class="option amemitiesOption"><i class="fas fa-place-of-worship"></i> Temple</button>
                                            
                                        </div>
                                    </div>

                        <div class="navigation-buttons mt-5">
                            <button type="button" class="back-btn">Back</button>
                            <button type="submit" id="submit" class="submit">Submit</button>
                        </div>
                    </div>
                </div>
         </div>

             
         </div>
</form>
        </div>
    </div>



    <script>
      const steps = document.querySelectorAll('.step');
        const formSections = document.querySelectorAll('.form-section');
        const nextButtons = document.querySelectorAll('.next-btn');
        const backButtons = document.querySelectorAll('.back-btn');
        const stepLines = document.querySelectorAll('.step-line');
        const pincodeInput = document.getElementById("Pincode");
        const showMoreButton = document.getElementById("showMoreFields");
        const hiddenFields = document.getElementById("hiddenFields");
        let selectedAmenities;
        let selectedValue;
        let currentStep = 0;
        let projectNameError = false;
         const formData = {};


          
            pincodeInput.addEventListener("input", function () {
                if (pincodeInput.value.trim() !== "") {
                   
                    showMoreButton.style.display = "inline-block";
                } else {
                    showMoreButton.style.display = "none";
                }
            });
            showMoreButton.addEventListener("click", function () {
             
                 const Pincode = document.querySelector("#Pincode");
            const errorMessage = Pincode.nextElementSibling;
             if (errorMessage && errorMessage.classList.contains("error-message")) {
                errorMessage.remove();
                 }

                pincodeInput.disabled = false; 
                showMoreButton.disabled = false; 
            });

         const rangeInput = document.getElementById("customRange1");
        const valueBox = document.getElementById("rangeValue");

       
        valueBox.textContent = rangeInput.value;

        
        rangeInput.addEventListener("input", function () {
            valueBox.textContent = rangeInput.value;
            formData['ageOption'] = rangeInput.value;
        });
       

  
     function validateStep(step) {
        let isValid = true;

        
        $(formSections[step]).find('.error-message').remove();

      
        $(formSections[step])
        
             .find('input:radio, input:text, textarea, input[type="number"]')
            .each(function () {
                const $this = $(this);
                if ($this.is(':radio')) {
                    
                   if (
                    $(`input[name="${$this.attr('name')}"]:checked`).length === 0 &&
                    !$this.closest('.radio-group').next('.error-message').length
                ) {
                    isValid = false;
                    const errorMsg = `<span class="error-message">Please select an property option.</span>`;
                    $this.closest('.radio-group').after(errorMsg);
                }
                 } 
                else if ($this.val().trim() === '') {
                   
                    isValid = false;
                    const errorMsg = `<span class="error-message">This field is required.</span>`;
                    $this.after(errorMsg);
                }  
                else if ($this.attr('type') === 'number' && $this.val() === '') {
                isValid = false;
                const errorMsg = `<span class="error-message">Please enter a number.</span>`;
                $this.after(errorMsg);
                  }
            });


                        if (projectNameError) {
                    isValid = false; 
                    const errorMsg = `<span class="error-message">Please enter a valid project name.</span>`;
                    $('#property-Name').after(errorMsg); 
                }
                const Pincode = $(formSections[step]).find('.Pincode');             
                if (Pincode.length > 0) {
            
                    const pincodeValue = Pincode.val().trim();              
                   
                    Pincode.next('.error-message').remove();                    
                 
                    if (pincodeValue.length !== 6 || isNaN(pincodeValue)) {
             
                        isValid = false;
                        const errorMsg = `<span class="error-message">Please enter a valid 6-digit Pincode.</span>`;
                        Pincode.after(errorMsg);
                    }
                }
                 const Locality = $(formSections[step]).find('#locality');
                    if (Locality.length > 0) {
                        const selectedValue = Locality.val(); 
                       
                        Locality.next('.error-message').remove();
                        
                   
                        if (!selectedValue || selectedValue === "") {
                            isValid = false;
                            if (Locality.next('.error-message').length === 0) {
                                const errorMsg = `<span class="error-message">Please select a Locality.</span>`;
                                Locality.after(errorMsg);
                            }

                            
                            if (Pincode.next('.error-message').length === 0) {
                                const errormsg = `<span class="error-message">Please Click Get City.</span>`;
                                Pincode.after(errormsg);
                            }
                        }
                    }

          
             const statusOptions = $(formSections[step]).find('.stauts-option');
            if (statusOptions.length > 0 && statusOptions.filter('.selected').length === 0) {
                isValid = false;
                const errorMsg = `<span class="error-message">Please select an availability status.</span>`;
                statusOptions.closest('.furnishing-options').after(errorMsg);
            }

    
            const ageOptions = $(formSections[step]).find('.age-options');
            if (ageOptions.is(':visible')) {
                @* const ageButtons = ageOptions.find('.age-option');
                if (ageButtons.filter('.selected').length === 0) {
                    isValid = false;
                    const errorMsg = `<span class="error-message">Please select the age of the property.</span>`;
                    ageOptions.find('div').append(errorMsg);
                } *@
            }
            
                @* const uploadedImageContainers = $(formSections[step]).find('.upload-container:visible');
                console.log(uploadedImageContainers,"uploadedImageContainers");

                if (uploadedImageContainers.length > 0) {
                    const validImages = uploadedImageContainers.find('.uploaded-image').filter(function () {
                        return $(this).attr('src') && $(this).attr('src').trim() !== '';
                    });
                console.log(validImages,"validImagesvalidImages");

                    if (validImages.length === 0) {
                        isValid = false;
                        const errorMsg = `<span class="error-message">Please upload at least one valid image.</span>`;
                        uploadedImageContainers.closest('.upload-area').after(errorMsg);
                    }
                }         *@
                return isValid;
            }
               

               function collectFormData() {
   

   
                $(formSections).find('input, select, textarea').each(function () {
                    const $this = $(this);
                    console.log("checkbox")

                    if ($this.is(':radio') || $this.is(':checkbox')) {
                        
                            formData[$this.attr('name')] = $this.is(':checked') ? true : false;
                        } else {
                            
                            formData[$this.attr('name')] = $this.val().trim();
                        }
                    });
                
                @* const ageOptions = $(formSections).find('.age-option');
                if (ageOptions.length > 0) {
                    const selectedAge = ageOptions.filter('.selected').data('value');
                    if (selectedAge) {
                        formData['ageOption'] = selectedAge;
                    }
                } *@
                const stautsOptions = $(formSections).find('.stauts-option');
                if (stautsOptions .length > 0) {
                    const selectedstauts = stautsOptions .filter('.selected').data('value');
                    if (selectedstauts) {
                        formData['stautsOption'] = selectedstauts;
                    }
                }
                console.log("Form Data: ", formData);

                return formData;
            }



            nextButtons.forEach((btn, index) => {
            btn.addEventListener('click', () => {   
                if (validateStep(currentStep)) {

                formSections[currentStep].classList.remove('active');
                steps[currentStep].classList.remove('active');
                currentStep++;
                formSections[currentStep].classList.add('active');
                steps[currentStep].classList.add('active');
                }             

            });
         });

        backButtons.forEach((btn, index) => {
            btn.addEventListener('click', () => {
                formSections[currentStep].classList.remove('active');
                steps[currentStep].classList.remove('active');
                currentStep--;
                formSections[currentStep].classList.add('active');
                steps[currentStep].classList.add('active');

            });
        });

     
            

        function selectOption(element) {
            const options = document.querySelectorAll('.option');
            options.forEach(option => option.classList.remove('selected'));
            element.classList.add('selected');
        }



                    const uploadButton = document.querySelector('.upload');
                    const fileInput = document.getElementById('fileInput');
                    const uploadContainers = document.querySelectorAll('.upload-container');                    
                    let currentIndex = 0;

                     function uploadimage(element) {
                           
                             fileInput.click();
                        }

                   
                    fileInput.addEventListener('change', (event) => {
                        const files = event.target.files;

                         if (currentIndex + files.length > uploadContainers.length) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'error',
                                    text: "You can upload a maximum of 5 images.",
                                    confirmButtonText: 'OK'
                                });
                                return;
                            }
                        

                        if (files.length > 0) {
                            Array.from(files).forEach((file) => {
                                if (currentIndex < uploadContainers.length) {
                                    const reader = new FileReader();

                                    reader.onload = (e) => {
                                        const container = uploadContainers[currentIndex];
                                        const image = container.querySelector('.uploaded-image');
                                        image.src = e.target.result;
                                        container.style.display = 'block';
                                        currentIndex++;
                                    };

                                    reader.readAsDataURL(file); 
                                }
                            });
                           }  
                    });

                    const uploadvideobtn= document.querySelector('.upload-videos');
                    const videoFileInput = document.getElementById('videoFileInput');
                    const uploadvideoContainers = document.querySelectorAll('.video-upload-container');


                    let videoindex = 0;
                    function uploadvideo(element) {
                     videoFileInput.click();
                    }

                  

                    videoFileInput.addEventListener('change', (event) => {
                        const files = event.target.files;
                        if (videoindex + files.length > uploadvideoContainers.length) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'error',
                                    text: "You can upload a maximum of 1 Video.",
                                    confirmButtonText: 'OK'
                                });
                                return;
                            }

                        if (files.length > 0) {
                            Array.from(files).forEach((file) => {
                                if (videoindex < uploadvideoContainers .length) {
                                    const container = uploadvideoContainers [videoindex];
                                    const video = container.querySelector('.video-preview');
                                    const source = video.querySelector('source');
                                    const videoURL = URL.createObjectURL(file);
                                    source.src = videoURL;
                                    video.load(); 
                                    container.style.display = 'block';
                                    videoindex++;
                                }
                            });
                        }
                    });
                    

                     const pdfUploadButton = document.querySelector('.upload-pdfs');
                        const pdfFileInput = document.getElementById('pdfFileInput');
                        const pdfUploadContainers = document.querySelectorAll('.pdf-upload-container');


                        let currentPDFIndex = 0;

                                function uploadpdf(element) {
                                pdfFileInput.click();
                                }
                       

                        pdfFileInput.addEventListener('change', (event) => {
                            const files = event.target.files;
                             if (currentPDFIndex + files.length > pdfUploadContainers.length) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: "You can upload a maximum of 1 Brochure.",
                                    confirmButtonText: 'OK'
                                });
                                return;
                            }

                            if (files.length > 0) {
                                Array.from(files).forEach((file) => {
                                    if (currentPDFIndex < pdfUploadContainers.length) {
                                        const container = pdfUploadContainers[currentPDFIndex];
                                        const embedTag = container.querySelector('.pdf-preview');

                                    
                                        const pdfURL = URL.createObjectURL(file);
                                        embedTag.src = pdfURL;
                                        container.style.display = 'block';
                                        currentPDFIndex++;
                                    }
                                });
                            }
                        }); 
        


      
       
        function selectamemitiesOption(element) {
            const amemitiesOptions = document.querySelectorAll('.amemitiesOption');          
             element.classList.toggle('selected');


              selectedAmenities = Array.from(document.querySelectorAll('.amemitiesOption.selected'))
               .map(option => option.getAttribute('data-value')); 
                formData['amenities'] = selectedAmenities;
 
            console.log('Selected Amenities:', selectedAmenities);
        }
        function selectFurnishing(element) {
            const furnishingOptions = document.querySelectorAll('.furnishing-option');
            furnishingOptions.forEach(option => option.classList.remove('selected'));
            element.classList.add('selected');
        }
        function selectstauts(element) {
            const stautsOptions = document.querySelectorAll('.stauts-option');
            stautsOptions.forEach(option => option.classList.remove('selected'));
            element.classList.add('selected');


 // Get the data-value attribute
    selectedValue = element.getAttribute('data-value');
    console.log('Selected Value:', selectedValue);
             const ageOptionsDiv = document.querySelector('.age-options');
             console.log(element.textContent)
                if (element.textContent == 'Ready to move') {
                    ageOptionsDiv.style.display = 'block';
                } else {
                    ageOptionsDiv.style.display = 'none';
                }
        }
        

         $('#property-Name').on('change', function () {
        const projectName = $(this).val();
                        const projectvalue = document.getElementById('property-Name');

        console.log(projectName);
       if (projectName) {
    $.ajax({
        url: `http://localhost:5293/api/ProjectApi/ProjectName`,
        type: 'POST', // HTTP method
        contentType: 'application/json', // Content type
        data: JSON.stringify(projectName), // Send the project name as raw JSON
        success: function (response) {
            console.log('Project name is valid:', response);
            projectNameError = false;
            const projectvalue = $('#property-Name'); // Correct selection using jQuery

            if (projectvalue.length > 0) { // Ensure the element exists
                // Remove any existing error messages
                const existingErrorMsg = projectvalue.siblings('.error-message');
                if (existingErrorMsg.length) {
                    existingErrorMsg.remove(); // Remove the error message
                }
            }
        },
        error: function (xhr, status, error) {
            console.error('Validation error:', xhr.responseText);

            const projectvalue = $('#property-Name'); // Correct selection using jQuery

            if (projectvalue.length > 0) { // Ensure the element exists
                // Remove any existing error messages
                const existingErrorMsg = projectvalue.siblings('.error-message');
                if (existingErrorMsg.length) {
                    existingErrorMsg.remove(); // Remove the error message
                }
                 projectNameError = true;

                // Add the error message below the input field
                const errormsg = `<span class="error-message">This Project Name is already registered.</span>`;
                projectvalue.after(errormsg); 
            }
        }
    }); 
} else {
    console.warn('Project name is empty.');
}

    });

    
       const form = document.getElementById('myForm');

form.addEventListener('submit', (e) => {
    e.preventDefault(); // Prevent the default form submission

    // Collecting non-file inputs
    const formData = new FormData();
    formData.append("ProjectName", document.getElementById("property-Name").value);
    formData.append("City", document.getElementById("city").value);
    formData.append("Locality", document.getElementById('locality').value);
    formData.append("Address", document.getElementById('Address').value);
    formData.append("Pincode", document.getElementById('Pincode').value);

    // Assuming you have a session user ID passed to ViewBag
    const userSessionId = '@ViewBag.Id';
    formData.append("UserId", userSessionId);

    // Getting checkbox value for "Ready to Move"
    const selectedValue = document.querySelector('input[name="ReadytoMove"]:checked');
    formData.append("ReadytoMove", selectedValue ? true : false);

    // Collecting the file inputs
    const fileInputimages = document.getElementById('fileInput');
    const selectedFilesImage = fileInputimages.files;
    for (let i = 0; i < selectedFilesImage.length; i++) {
        formData.append("Files", selectedFilesImage[i]);
    }

    const videoFileInput = document.getElementById('videoFileInput');
    const selectedVideoFile = videoFileInput.files[0];
    if (selectedVideoFile) {
        formData.append("VideoFiles", selectedVideoFile);
    }

    const pdfFileInput = document.getElementById('pdfFileInput');
    const selectedPdfFile = pdfFileInput.files[0];
    if (selectedPdfFile) {
        formData.append("BorchureFile", selectedPdfFile);
    }

if (Array.isArray(selectedAmenities) && selectedAmenities.length > 0) {
    // If selectedAmenities is a non-empty array, append each amenity
    selectedAmenities.forEach(amenity => {
        formData.append("AllAmenities", amenity);
    });
} else {
    // If it's null or an empty array, send null instead of an empty array
    formData.append("AllAmenities", 0);
}



    for (let [key, value] of formData.entries()) {
   
        if (value instanceof File) {
            console.log(`${key}: ${value.name}`);
        } else {
            console.log(`${key}: ${value}`);
        }
    }

    $.ajax({
        url: "http://localhost:5293/api/ProjectApi/AddProject",
        type: 'POST',
        data: formData,
        processData: false, 
        contentType: false, 
        success: function (response) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: response,
                                    confirmButtonText: 'OK'
                                });
                                 setTimeout(function () {
                                 window.location.href = '@Url.Action("User", "Client")';
                                }, 2000);
         
        },
        error: function (error) {
            console.error("Error: ", error.responseJSON);
            @* alert("An error occurred while adding the project."); *@
             Swal.fire({
                                    icon: 'error',
                                    title: 'error',
                                    text: "An error occurred while adding the project.",
                                    confirmButtonText: 'OK'
                                });
        }
    });
});




document.getElementById('showMoreFields').addEventListener('click', function () {
        const pincode = document.getElementById('Pincode').value.trim();
        const hiddenFields = document.getElementById('hiddenFields');
        const loader = document.getElementById('loader');

        // Check if pincode is valid (6 digits)
        if (pincode.length === 6) {
                loader.style.display = 'flex';

            fetch(`https://api.postalpincode.in/pincode/${pincode}`)
                .then(response => response.json())
                .then(data => {
                    if (data[0].Status === "Success") {
                        const cityField = document.getElementById('city');
                        const localitySelect = document.getElementById('locality');

                        // Set city field and make it read-only (not editable)
                        cityField.value = data[0].PostOffice[0].District;
                        cityField.readOnly = true;

                        // Populate locality dropdown with PostOffice names
                        localitySelect.innerHTML = '<option value="" disabled selected>Select Locality</option>';
                        data[0].PostOffice.forEach(office => {
                            const option = document.createElement('option');
                            option.value = office.Name;
                            option.textContent = office.Name;
                            localitySelect.appendChild(option);
                          hiddenFields.style.display = 'block';
                        });

                       
                    } else {
                        @* alert('Invalid Pincode or no data found.'); *@
                         Swal.fire({
                                    icon: 'error',
                                    title: 'error',
                                    text: 'Invalid Pincode or no data found.',
                                    confirmButtonText: 'OK'
                                });
                        hiddenFields.style.display = 'none';
                    }
                })
                .catch(error => {
                    console.error('Error fetching pincode data:', error);
                     Swal.fire({
                                    icon: 'error',
                                    title: 'error',
                                    text: 'Unable to fetch data. Please try again later.',
                                    confirmButtonText: 'OK'
                                });
                    @* alert('Unable to fetch data. Please try again later.'); *@
                })
                .finally(() => {
                 loader.style.display = 'none';
            });
        } else {
            alert('Please enter a valid 6-digit Pincode.');
        }
    });

    // Show "Get City" button dynamically when valid pincode is entered
    document.getElementById('Pincode').addEventListener('input', function () {
        const showMoreFields = document.getElementById('showMoreFields');
        if (this.value.trim().length === 6) {
            showMoreFields.style.display = 'block';
        } else {
            showMoreFields.style.display = 'none';
            document.getElementById('hiddenFields').style.display = 'none';
        }
    });


    </script>

</body>

</html>
